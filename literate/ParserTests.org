#+TITLE: Parser Tests
#+PROPERTY: header-args    :comments both :tangle ../test/Parser.test.js

* Preamble

#+begin_src js
import { parseFile } from "../src/Parser";
import { AbstractSyntaxTree } from "../src/AbstractSyntaxTree";
#+end_src

* Parse File Tests

Blank file.

#+begin_src js
it.skip("Can parse a blank file and produce a blank tree", async () => {
    const expected = AbstractSyntaxTree();
    const parsed = await parseFile("");

    expect(parsed).toEqual(expected);
})
#+end_src

Blank-ish file, just filled with whitespace.

#+begin_src js
it("Can parse a file of only whitespace and produce a blank tree", async () => {
    const expected = AbstractSyntaxTree();
    const parsed = await parseFile("  \t  \n  ");

    expect(parsed).toEqual(expected);
})
#+end_src

* Parse Single Block Tests

#+begin_src js
it.skip("Parses a single blank", () => {
    const tree = Parser.single("_")
    expect(tree).toEqual(Block.Blank())
})
#+end_src

Turning off these tests since I'm not ready for them, got to build them machine first.

#+begin_src js
it.skip("Parses a big integer", () => {
    const tree = Parser.single("33554432")
    expect(tree).toEqual(Block.Number(33554432))
})

it.skip("Parses a string", () => {
    const tree = Parser.single("\"Hello\"")
    expect(tree).toEqual(Block.String("Hello"))
})
#+end_src
